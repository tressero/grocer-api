<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup Condition="'$(Configuration)'=='DEBUG'">
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <!--<SpaRoot>ClientApp\</SpaRoot>-->
    <!--<SpaProxyServerUrl>https://localhost:44436</SpaProxyServerUrl>-->
    <!--<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>-->
    <RootNamespace>angular_dotnet</RootNamespace>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='RELEASE'">
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <RootNamespace>angular_dotnet</RootNamespace>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Serilog" Version="3.0.1" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="7.0.0" />
    <PackageReference Include="Serilog.Extensions.Logging.File" Version="2.0.0" />
    <PackageReference Include="AutoMapper" Version="10.1.1" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="6.0.12" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="6.0.12">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.ApiDescription.Server" Version="6.0.12">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="7.0.0" />
    <PackageReference Include="Nerdbank.GitVersioning" Version="3.6.133">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Npgsql" Version="6.0.7" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="6.0.7" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.4.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.4.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.4.0" />
  </ItemGroup>

<!--  <ItemGroup>-->
<!--    &lt;!&ndash; Don't publish the SPA source files, but do show them in the project files list &ndash;&gt;-->
<!--    <Content Remove="$(SpaRoot)**" />-->
<!--    <None Remove="$(SpaRoot)**" />-->
<!--    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />-->
<!--  </ItemGroup>-->

  <ItemGroup>
    <Folder Include="Migrations\SQL" />
  </ItemGroup>

<!--  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">-->
<!--    &lt;!&ndash; Ensure Node.js is installed &ndash;&gt;-->
<!--    <Exec Command="node &#45;&#45;version" ContinueOnError="true">-->
<!--      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />-->
<!--    </Exec>-->
<!--    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />-->
<!--    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />-->
<!--    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
<!--  </Target>-->
  
<!--  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">-->
<!--    &lt;!&ndash; As part of publishing, ensure the JS resources are freshly built in production mode &ndash;&gt;-->
<!--    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />-->
<!--    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build &#45;&#45; &#45;&#45;configuration production" />-->

<!--    &lt;!&ndash; Include the newly-built files in the publish output &ndash;&gt;-->
<!--    <ItemGroup>-->
<!--      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />-->
<!--      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">-->
<!--        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>-->
<!--        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>-->
<!--        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>-->
<!--      </ResolvedFileToPublish>-->
<!--    </ItemGroup>-->
<!--  </Target>-->
  
  
</Project>
