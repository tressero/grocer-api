// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using angular_dotnet.DbContext;

#nullable disable

namespace angular_dotnet.Migrations
{
    [DbContext(typeof(GrocerContext))]
    [Migration("20221218032428_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("angular_dotnet.DbModels.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("StoreSectionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StoreSectionId");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("angular_dotnet.DbModels.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("angular_dotnet.DbModels.RecipeIngredientJunction", b =>
                {
                    b.Property<Guid>("IngredientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uuid");

                    b.Property<int>("IngredientCount")
                        .HasColumnType("integer");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredientJunction");
                });

            modelBuilder.Entity("angular_dotnet.DbModels.StoreSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StoreSection");
                });

            modelBuilder.Entity("angular_dotnet.DbModels.Ingredient", b =>
                {
                    b.HasOne("angular_dotnet.DbModels.StoreSection", "StoreSection")
                        .WithMany()
                        .HasForeignKey("StoreSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreSection");
                });

            modelBuilder.Entity("angular_dotnet.DbModels.RecipeIngredientJunction", b =>
                {
                    b.HasOne("angular_dotnet.DbModels.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredientJunction")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK_RecipeIngredientJunction_IngredientId");

                    b.HasOne("angular_dotnet.DbModels.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("angular_dotnet.DbModels.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredientJunction");
                });
#pragma warning restore 612, 618
        }
    }
}
